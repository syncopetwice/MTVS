<apex:page controller="CommunityTopicController" showHeader="false" sideBar="false" standardStylesheets="false" docType="html-5.0" applyBodyTag="false" applyHtmlTag="false">
	<apex:composition template="{!$Site.Template}">
		<apex:define name="title">{!$Label.LBL_Page_Title}</apex:define>
		<apex:define name="body">
			<div ng-app="TopicsApp" ng-controller="TopicsController">
				<div class="profile">
					<div class="container content CommunityTopic">
						<div class="row">
								<!--LEFT-->
							<div class="col-md-3 md-margin-bottom-40">
								<c:CommunityUserPhoto />
								<c:CommunityFeedNavigation pn="4" />
							</div>
							<!--LEFT-->
							<!--MIDDLE-->
							<div class="col-md-9">
								<div class="profile-body margin-bottom-20">
									<!--CENTER-->
									<apex:outputPanel styleClass="panel panel-profile" id="centerContent" layout="block" rendered="{!!showTopics}">
										<!--QUICK SEARCH -->
										<div><h2>{!$Label.LBL_Topic}</h2></div>
										<div class="row margin-bottom-20">
											<div class="col-md-6 ">
												<div class="input-group">
													<input ng-model="quickSearchQuery" class="form-control" placeholder="Type a Name..." value="" id="quickSearchInput" />
													<span class="input-group-btn">
														<button id="quickSearchButton" class="btn-u">
															<i class="fa fa-search"></i>
														</button>
													</span>
												</div>
											</div>
											<div>|  Show All sorted by People Talking About This</div>
											<div class="col-md-6 ">
											</div>
										</div>
										<!--QUICK SEARCH -->
										<div class="tab-v1">
											<div class="tab-content">
												<apex:outputPanel layout="none">
													<div class="tab-pane active">
														<div class="col-md-12">
															<div class="media media-v2" ng-repeat="t in allTopics | quickSearch:this | startFrom:page.startFrom() | limitTo:page.pageSize">
																<div class="pull-left">
																	<h5 class="media-heading">
																		<strong><a href="{!$Page.CommunityTopic}?id={{ t.Id }}"><div ng-bind-html="t.Name"></div></a></strong>
																	</h5>
																</div>
																<div class="pull-right">
																	<p class="pull-left margin-right-10">{{t.TalkingAbout}} {{t.Text}}</p>
																	<button class="btn-u" ng-hide="t.TopicIsFollowing" ng-click="followAction(t);"><i class="fa fa-plus-circle"></i>&nbsp;Follow</button>
																	<button class="btn-u btn-u-blue" ng-show="t.TopicIsFollowing" ng-click="unFollowAction(t);"><i class="fa fa-check"></i>&nbsp;Following</button>
																	
																</div>
															</div>
														</div>
														<ul class="pager">
															<li class="previous" ng-hide="page.currentPage == 1 || page.totalPages() == 0">
																<a href="javascript:;" ng-click="page.goToFirst();">{!$Label.LBL_First}</a>
															</li>
															<li class="previous" ng-hide="page.currentPage == 1 || page.totalPages() == 0">
																<a class="margin-left-5" href="javascript:;" ng-click="page.goToPrev();">{!$Label.LBL_Previous}</a>
															</li>
															<li ng-hide="page.totalPages() == 0">
																{!$Label.LBL_Page}&nbsp;{{ page.currentPage }}&nbsp;{!$Label.LBL_of}&nbsp;{{ page.totalPages() }}
															</li>
															<li ng-hide="page.totalPages() != 0">
																<div class="alert alert-danger">{!$Label.ERR_Cant_Found_People}</div>
															</li>
															<li class="next" ng-hide="page.currentPage >= page.totalPages()">
																<a class="margin-left-5" href="javascript:;" ng-click="page.goToLast();">{!$Label.LBL_Last}</a>
															</li>
															<li class="next" ng-hide="page.currentPage >= page.totalPages()">
																<a href="javascript:;" ng-click="page.goToNext();">{!$Label.LBL_Next}</a>
															</li>
														</ul>	
														<div class="clearfix"></div>
													</div>
												</apex:outputPanel>
											</div>
										</div>
									</apex:outputPanel>
									<apex:outputPanel id="feed" styleClass="profile-edit tab-pane fade in active" rendered="{!showTopics}">
										<!-- <div class="pull-right"><p>Community>Topics>Name</p></div> -->
										<c:CommunityFeed tf="true" ti="{!topicId}" pid="{!parentId}"/>
									</apex:outputPanel>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</apex:define>
		<apex:define name="scripts">
			<script type="text/javascript" src="{!$Resource.CommunityResources}/js/underscore/underscore-min.js" ></script>
			<script type="text/javascript" src="{!$Resource.CommunityResources}/js/angularjs/angular.min.js" ></script>
			<script type="text/javascript" src="//code.angularjs.org/1.4.0/angular-sanitize.js"></script> 
			<script type="text/javascript">
				var TopicsApp = angular.module('TopicsApp', ['ngSanitize']);
				TopicsApp.factory('getTopics', ['$q', '$rootScope', function($q, $rootScope) {
					return function() {
						var deferred = $q.defer();
						if ($rootScope.getDataStatus != 'InProgress') {
							$rootScope.getDataStatus = 'InProgress';
							Visualforce.remoting.Manager.invokeAction(
								'{!$RemoteAction.CommunityTopicController.getTopics}',
								function(result, event) {
									$rootScope.$apply(function() {
										if (event.status) {
											deferred.resolve(result);
											$rootScope.getDataStatus = 'Finished';
										} else {
											deferred.reject(event);
											$rootScope.getDataStatus = 'Finished';
										}
									})
								},
								{ buffer: true, escape: true, timeout: 30000 }
							);
						} else {
							deferred = null;
							return null;
						}
						return deferred.promise;
					}
				}]);

				TopicsApp.factory('subscriberAction', ['$q', '$rootScope', function($q, $rootScope) {
					return function(tId, isFollow) {
						var deferred = $q.defer();
						if ($rootScope.getDataStatus != 'InProgress') {
							$rootScope.getDataStatus = 'InProgress';
							Visualforce.remoting.Manager.invokeAction(
								'{!$RemoteAction.CommunityTopicController.subscriberAction}',
								tId,
								isFollow,
								function(result, event) {
									$rootScope.$apply(function() {
										if (event.status) {
											deferred.resolve(result);
											$rootScope.getDataStatus = 'Finished';
										} else {
											deferred.reject(event);
											$rootScope.getDataStatus = 'Finished';
										}
									})
								},
								{ buffer: true, escape: true, timeout: 30000 }
							);
						} else {
							deferred = null;
							return null;
						}
						return deferred.promise;
					}
				}]);

				TopicsApp.filter('startFrom', function() {
					return function(input, start) {
						start = +start;
						return input.slice(start);
					}
				});
				TopicsApp.filter('quickSearch', function() {
					return function(input, scope) {
						var searchWords = scope.quickSearchQuery.match(/(\w){2,}/g);
						//scope.debug.searchBy = searchWords;
						if (searchWords) {
							//var re = new RegExp(searchWords.join('|'), "ig");
							var reText = '';
							for (var i = 0; i < searchWords.length; i++) {
								reText += '(?=.*'+searchWords[i]+')';
							}
							var re = new RegExp(reText, "ig");
							var output = [];
							for (var j = 0; j < input.length; j++) {
								if (input[j].Name.match(re) != null) {
									output.push(input[j]);
								}
							}
							input = output;
						}
						scope.page.totalRecords = input.length;

						// fix for filter pagination 
						var round = input.length / (scope.page.pageSize * scope.page.currentPage);
						if(Math.round(round) < 0.5){
							var currPage = Math.ceil(input.length / scope.page.pageSize);
							scope.page.currentPage = currPage;
						}

						return input;
					}
				});

				TopicsApp.controller('TopicsController', ['$scope', '$filter' ,'getTopics', 'subscriberAction', function($scope, $filter, getTopics, subscriberAction){
					$scope.quickSearchQuery = '';
					$scope.page = {
						pageSize: 25,
						currentPage: 1,
						totalRecords: 1,
						totalPages: function() {
							return Math.ceil($scope.page.totalRecords/$scope.page.pageSize);
						},
						changePageNumber : function () {
							if($scope.page.currentPage < 1) {
								$scope.page.currentPage = 1;
							} else if ($scope.page.currentPage > $scope.page.totalPages()) {
								$scope.page.currentPage = $scope.page.totalPages();
							}
						},
						nowOnPage: function() {
							return ($scope.page.currentPage*$scope.page.pageSize + $scope.page.pageSize < $scope.page.totalRecords)
								? $scope.page.currentPage*$scope.page.pageSize+$scope.page.pageSize 
								: $scope.page.totalRecords;
						},
						goToLast: function() {
							$scope.page.currentPage = $scope.page.totalPages(); 
						},
						goToFirst: function() {
							$scope.page.currentPage = 1;
						},
						goToPrev: function() {
							if ($scope.page.currentPage > 1) {
								$scope.page.currentPage = $scope.page.currentPage - 1;
							}
						},
						goToNext: function() {
							if ($scope.page.currentPage < $scope.page.totalPages()) {
								$scope.page.currentPage = $scope.page.currentPage + 1;
							}
						},
						startFrom: function() {
							return $scope.page.currentPage*$scope.page.pageSize-$scope.page.pageSize;
						}
					};
					$scope.followAction = function(t) {
						t.TopicIsFollowing = true;
						$scope.followUnfollow(t.Id, t.TopicIsFollowing);
					}
					$scope.unFollowAction = function(t) {
						t.TopicIsFollowing = false;
						$scope.followUnfollow(t.Id, t.TopicIsFollowing);
					}
					$scope.followUnfollow = function(tId, isFollow) {
						var def = subscriberAction(tId, isFollow);
						if (def != null) {
							$scope.inProgress = false;
							def.then(function(result) {
									if ($scope.inProgress == true) {
										$scope.followUnfollow();
									}
								},
								function(error){
									console.log(error);
								}
							);
						} else {
							$scope.inProgress = true;
						}
					};
					$scope.updateTopicsScope = function () {
						var def = getTopics();
						if (def != null) {
							$scope.inProgress = false;
							def.then(function(result) {
									$scope.allTopics = result;
									$scope.page.currentPage = 1;
									$scope.page.totalRecords = result.length;
									if ($scope.inProgress == true) {
										$scope.updateTopicsScope();
									}
								},
								function(error){
									console.log(error);
									$scope.page.currentPage = 1;
								}
							);
						} else {
							$scope.inProgress = true;
						}
					};
					$scope.updateTopicsScope();

					$scope.allTopics = [
					];
					window.scope = $scope;



				}]);
			


			</script>
			</apex:define>
	</apex:composition>
</apex:page>